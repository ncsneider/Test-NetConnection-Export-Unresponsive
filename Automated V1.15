# Path to CSV containing IP Address information
$inputCsv = "$ENV:USERPROFILE\Database.csv"

#Path to directory where CSV output files will be stored
$logPath = "$ENV:USERPROFILE\Folder Path"

$date = Get-Date

$fullPath = "$logPath\$(($date).Year)\$((Get-Culture).DateTimeFormat.GetMonthName(($date).Month))\$(Get-Date -Format "dd")"

# Creates Year->Month->Day Folder structure
if(!(Test-Path -Path $fullPath -PathType Container))
{
    New-Item -Path $fullPath -ItemType Directory -Force | Out-Null
}

# Cycles through IP's in .CSV file and tests if each one responds to ping
$report = Import-Csv -Path $inputCsv | ForEach-Object {

    if(!(Test-Connection -ComputerName $_.IP -Quiet -Count 1))
    {
        New-Object PsObject -Property @{
            Hostname = $_.Hostname
            "IP Address" = $_.IP
            Location = $_.Location
        }
    }
}

[System.Windows.Forms.MessageBox]::Show('Script has been completed.') | Out-Null

#Exports the CSV to custom path
$report | Export-Csv -Path $exportPath -Force -NoTypeInformation

#Define the email header formatting using CSS
$emailHeader = @"
<style>
TABLE {border-width: 1px; border-style: solid; border-color: black; border-collapse: collapse;}
TH {border-width: 2px; padding: 3px; border-style: solid; border-color: black; background-color: #b0afac;}
TD {border-width: 2px; padding: 3px; border-style: solid; border-color: black;}
</style>
"@
#Instantiate the .Net MailMessage class and define parameters for the Email
$emailMessage = New-Object System.Net.Mail.MailMessage
$emailMessage.From = New-Object System.Net.Mail.MailAddress "some@email.com","Unresponsive IP Report" #Enter sender Email address
$emailMessage.To.Add("some@email.com") # Enter recipient Email Address
$emailMessage.Subject = "The Following Devices Are Offline or Unresponsive"
$emailMessage.IsBodyHtml = $true
$emailMessage.Body = @"
    $($report | ConvertTo-Html -Head $emailHeader)
"@

#Instantiate the .Net SmtpClient class to authenticate and send the Email
$emailSMTP = New-Object System.Net.Mail.SmtpClient
$emailSMTP.Host = "smtp.server" #Enter SMTP Server
$emailSMTP.EnableSsl = $true
$emailSMTP.Credentials = New-Object System.Net.NetworkCredential ("enter-username", "enter-password"); #Enter username, password (email address and password)
$emailSMTP.Send($emailMessage)
